{"version":3,"sources":["webpack:///src/pages/cms/channel.vue","webpack:///./src/pages/cms/channel.vue?7284","webpack:///./src/pages/cms/channel.vue"],"names":["channel","data","checkList","channelPositions","customProps","children","label","title","showChannelChildren","channelForm","id","model_id","parent_id","name","positions","customChannelFields","ueditorConfig","ueditor","components","VueUeditorWrap","vue_ueditor_wrap_min_default","a","computed","extends_default","Object","vuex_esm","methods","addChannel","row","this","assign_default","channel_id","$store","dispatch","$types","CMS_PARENT_CHANNEL","editChannel","loadWholeChannel","CMS_CURRENT_CHANNEL","deleteChannel","_this","$confirm","confirmButtonText","cancelButtonText","type","then","asyncToGenerator_default","regenerator_default","mark","_callee","res","wrap","_context","prev","next","api","deleteCmsChannel","sent","success","CMS_CHANNELS","$message","message","error","stop","catch","handleNodeClick","node","length","CMS_CHANNEL_CHILDREN","doSubmit","doEdit","doAdd","doCancel","_this2","_callee2","_context2","saveCmsChannel","parentChannel","_this3","_callee3","_context3","_ref2","_this4","_callee4","whole","_context4","getCmsChannelWhole","forEach","field","$set","contents","item","value","metas","loadChannelPositions","_this5","_callee5","_context5","getCmsPositions","is_channel","mounted","_this6","_callee6","_context6","console","log","$route","meta","CMS_MODELS","watch","defineProperty_default","val","oldVal","_this7","models","model","fields","filter","hasOwnProperty","cms_channel","render","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","_v","ref","attrs","icon-class","default-expand-all","channels","node-key","props","expand-on-click-node","on","node-click","scopedSlots","_u","key","fn","_e","_s","staticStyle","padding","click","$event","width","channelChildren","prop","scope","font-weight","label-width","placeholder","callback","$$v","_l","m","autocomplete","index","Array","isArray","option","config","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/18.7e9db6cc764a3d9e9a9a.js","sourcesContent":["<style lang=\"less\" scoped>\n  .l-channel-list{\n    display: flex;\n    flex-flow: row nowrap;\n    min-height: calc(100vh - 50px - 20px);\n    margin:-20px 0 -20px -20px;\n    overflow-x: hidden;\n    .l-tree-containner{\n      min-width: 200px;\n      padding: 20px;\n      border-right: 1px solid #f4f4f4;\n      flex-shrink: 0;\n    }\n    .l-tree-content{\n      padding: 20px;\n      flex-grow: 1;\n      display: flex;\n      flex-flow: row nowrap;\n      box-sizing: border-box;\n      width: calc(100% - 240px);\n    }\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 17px;\n    /*padding-right: 8px;*/\n  }\n  .el-tree-node__content{\n    border-bottom: 1px solid #f4f4f4;\n    height: 32px;\n    line-height: 32px;\n  }\n  .l-channel-form{width: 100%;}\n  .l-channel-info ul li{\n    line-height: 40px;\n  }\n</style>\n<template>\n  <div class=\"l-channel-list\">\n      <div v-title=\"'栏目管理'\"></div>\n      <div class=\"l-tree-containner\">\n        <el-tree\n          @node-click=\"handleNodeClick\"\n          icon-class=\"el-icon-caret-right\"\n          :default-expand-all=\"true\"\n          ref=\"tree\"\n          :data=\"channels\"\n          node-key=\"id\"\n          :props=\"customProps\"\n          :expand-on-click-node=\"false\">\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span><span v-if=\"!data.children.length\" class=\"iconfont\">&#xe92a;</span>{{ node.label }}</span>\n          </span>\n        </el-tree>\n      </div>\n      <div class=\"l-tree-content\" v-if=\"showChannelChildren\">\n        <div class=\"l-block\">\n            <div class=\"l-block-header\"  v-if=\"parentChannel && parentChannel.id\">\n                <span><i class=\"iconfont\">&#xe64c;</i> {{parentChannel.hasOwnProperty('name') ? parentChannel.name : ''}}</span>\n                <el-button-group>\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"editChannel(parentChannel)\">编辑</el-button>\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(parentChannel)\">新增子栏目</el-button>\n                </el-button-group>\n            </div>\n            <div class=\"l-block-header\" v-if=\"!channels.length\">\n              <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel({id: 0})\">新增栏目</el-button>\n            </div>\n            <div class=\"l-block-body\">\n              <el-table\n                v-loading=\"loading\"\n                :data=\"channelChildren\"\n                style=\"width: 100%\">\n                <el-table-column\n                  prop=\"id\"\n                  label=\"ID\"\n                  width=\"80\">\n                </el-table-column>\n                <el-table-column\n                  prop=\"name\"\n                  label=\"栏目名\">\n                </el-table-column>\n                <el-table-column\n                  label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button type=\"text\" @click=\"editChannel(scope.row)\">编辑</el-button>\n                    <el-button type=\"text\" @click=\"addChannel(scope.row)\">新增子栏目</el-button>\n                    <el-button type=\"text\" @click=\"deleteChannel(scope.row)\">删除</el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n        </div>\n      </div>\n      <div class=\"l-tree-content\" v-if=\"!showChannelChildren\">\n        <div class=\"l-block\" v-if=\"!showChannelChildren\">\n          <div class=\"l-block-header\" v-if=\"parentChannel && parentChannel.id\">\n              <span>\n                <span v-if=\"channelForm.id\"><i class=\"iconfont\">&#xe64c;</i> {{channelForm.name}}</span>\n                <span v-else>\n                    <!--「<i class=\"iconfont\">&#xe64c;</i> 」-->\n                  在 <span style=\"font-weight: 700\">“{{parentChannel.name}}”</span>下新增栏目</span>\n                </span>\n              </span>\n              <el-button-group>\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(channelForm)\">新增子栏目</el-button>\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"deleteChannel(channelForm)\">删除</el-button>\n              </el-button-group>\n          </div>\n          <div class=\"l-block-body\">\n            <el-form :model=\"channelForm\" label-width=\"100px\">\n              <el-form-item label=\"模型\">\n                <el-select v-model=\"channelForm.model_id\" placeholder=\"请选择\">\n                  <el-option\n                    v-for=\"m in models\"\n                    :key=\"m.name\"\n                    :label=\"m.name\"\n                    :value=\"m.id\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"栏目名\">\n                <el-input v-model=\"channelForm.name\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <template v-for=\"(item, index) in customChannelFields\">\n                <el-form-item v-if=\"item.type=='text'\" :label=\"item.label\">\n                  <el-input :key=\"index\" :name=\"item.field\" v-model=\"channelForm[item.field]\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='checkbox' && Array.isArray(channelForm[item.field])\" :label=\"item.label\">\n                  <el-checkbox-group v-model=\"channelForm[item.field]\">\n                      <el-checkbox :label=\"option.value\" v-for=\"option in item.extra\">{{option.name}}</el-checkbox>\n                  </el-checkbox-group>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='textarea'\" :label=\"item.label\">\n                  <el-input type=\"textarea\" v-model=\"channelForm[item.field]\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='content'\" class=\"l-mb-22\" :label=\"item.label\">\n                  <div>\n                    <vue-ueditor-wrap v-model=\"channelForm[item.field]\" :config=\"ueditorConfig\"></vue-ueditor-wrap>\n                  </div>\n                </el-form-item>\n              </template>\n                <el-form-item label=\"栏目推荐位\" v-if=\"channelPositions.length\">\n                    <!--<el-switch-->\n                            <!--v-model=\"showSwitch\"-->\n                            <!--active-color=\"#13ce66\"-->\n                            <!--inactive-color=\"#cccccc\">-->\n                    <!--</el-switch>-->\n                    <el-checkbox-group v-model=\"channelForm['positions']\">\n                        <el-checkbox :label=\"option.id\" v-for=\"option in channelPositions\">{{option.name}}</el-checkbox>\n                        <!--<el-checkbox label=\"复选框 A\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 B\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 C\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 D\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 E\"></el-checkbox>-->\n                    </el-checkbox-group>\n                </el-form-item>\n\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"doSubmit\">确定</el-button>\n                <!--<el-button @click=\"doCancel\">取消</el-button>-->\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\n  import ueditorConfig from \"../../store/ueditor\";\n  import VueUeditorWrap from 'vue-ueditor-wrap';\n  import {mapState, mapGetters} from 'vuex'\n  import api from '../../api/index'\n\n  export default {\n    data() {\n      return {\n        checkList:[],\n        //showSwitch: true,\n        channelPositions: [],\n        customProps: {\n          children: 'children',\n          label: 'name'\n        },\n        title: '添加子栏目',\n        showChannelChildren: true,\n        channelForm:{\n          id: null,\n          model_id: '',\n          parent_id: null,\n          name: null,\n          positions:[]\n        },\n        customChannelFields: [],\n        ueditorConfig: ueditorConfig\n      }\n    },\n    components:{\n      VueUeditorWrap\n    },\n    computed:{\n        ...mapGetters([\n            'loading',\n            'channels',\n            'channelChildren',\n            'models',\n            'parentChannel',\n        ]),\n//      loading(){\n//        return this.$store.getters.loading;\n//      },\n//      treeData(){\n//        return this.$store.getters.channels;\n//      },\n//      children(){\n//        return this.$store.getters.channelChildren;\n//      },\n//      models(){\n//        return this.$store.getters.models;\n//      },\n//      parentChannel(){\n//        return this.$store.getters.parentChannel;\n//      },\n    },\n    methods: {\n      addChannel(row){\n        this.showChannelChildren = false;\n        this.channelForm = Object.assign({}, {\n          id: null,\n          parent_id: row.id,\n          model_id: '',\n          channel_id: null,\n          name: null,\n          positions: []\n        });\n        this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, row)\n        this.customChannelFields = []\n      },\n      editChannel(row){\n        this.loadWholeChannel(row)\n        this.showChannelChildren = false;\n\n        this.$store.dispatch(this.$types.CMS_CURRENT_CHANNEL, row)\n      },\n      deleteChannel(row){\n        this.$confirm('确定删除“'+row.name+'”栏目?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(async () => {\n          let res = await api.deleteCmsChannel({id: row.id})\n          if(res.success){\n            this.$store.dispatch(this.$types.CMS_CHANNELS, {id: row.parent_id});\n            this.showChannelChildren = true;\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n          }else{\n            this.$message({\n              type: 'error',\n              message: res.error\n            });\n          }\n        }).catch(()=>{});\n      },\n      handleNodeClick(node, ...$params){\n        if(node.children.length>0){\n          this.$store.dispatch(this.$types.CMS_CHANNEL_CHILDREN, node);\n          this.showChannelChildren = true;\n          this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, node)\n        }else{\n          this.showChannelChildren = false;\n          this.loadWholeChannel(node)\n        }\n      },\n      doSubmit(){\n        if(!this.channelForm.id){\n          this.doAdd()\n        }else{\n          this.doEdit()\n        }\n      },\n      doCancel(){\n        this.showChannelChildren = true;\n      },\n      async doAdd(){\n        this.showChannelChildren = false\n        let res = await api.saveCmsChannel(this.channelForm)\n        if(res.success){\n          this.showChannelChildren = true;\n          this.$store.dispatch(this.$types.CMS_CHANNELS, this.parentChannel);\n          this.$message({\n            type: 'success',\n            message: '添加成功!'\n          });\n        }else{\n          this.$message({\n            type: 'error',\n            message: '添加失败!'+res.error\n          });\n        }\n      },\n      async doEdit(){\n        let res = await api.saveCmsChannel(this.channelForm)\n        if(res.success){\n          this.$message({\n            type: 'success',\n            message: '修改成功!'\n          });\n          this.$store.dispatch(this.$types.CMS_CHANNELS, {id: this.channelForm.parent_id});\n        }else{\n          this.$message({\n            type: 'warning',\n            message: '修改失败!'+res.error\n          });\n        }\n      },\n      async loadWholeChannel({id}){\n        let res = await api.getCmsChannelWhole({id})\n        let whole = res.data;\n        this.channelForm = {}\n        let baseFields = ['id', 'model_id', 'parent_id', 'name', 'title', 'keywords', 'description'];\n\n        baseFields.forEach( field => {this.$set(this.channelForm, field, whole[field])} );\n\n        if(whole.contents && whole.contents.length){\n          whole.contents.forEach( item => {this.$set(this.channelForm, item.field, item.value)} );\n        }\n\n        if(whole.metas && whole.metas.length){\n          whole.metas.forEach( item => {this.$set(this.channelForm, item.field, item.value)});\n        }\n\n        if(whole.positions){\n            this.$set(this.channelForm, 'positions', whole.positions)\n        }\n      },\n      async loadChannelPositions(){\n          let res = await api.getCmsPositions({is_channel: 1})\n          this.channelPositions = res.data\n      }\n\n    },\n    async mounted() {\n      console.log(`current meta:`,this.$route.meta)\n      this.$store.dispatch('toggleState');\n      this.$store.dispatch(this.$types.CMS_CHANNELS);\n      this.$store.dispatch(this.$types.CMS_MODELS);\n      await this.loadChannelPositions()\n    },\n    watch:{\n      ['channelForm.model_id'](val, oldVal){\n        if(val){\n          if(this.models.length > 0){\n            this.models.forEach( model => {\n              if(model.id == this.channelForm.model_id){\n                this.customChannelFields = model.fields.filter( field => {\n                  if(field.is_channel){\n                    // 不覆盖主表中存储的字段\n                    if(!this.channelForm.hasOwnProperty(field.field)){\n                        this.$set(this.channelForm, field.field, '')\n                        if(field.type == 'checkbox'){\n                            this.$set(this.channelForm, field.field, [])\n                        }\n                    }\n                  }\n                  return field.is_channel;\n                })\n              }\n            });\n          }\n        }else{\n          // 不设置任何自定义表单项\n          this.customChannelFields = []\n        }\n      }\n    }\n  }\n</script>\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/cms/channel.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"l-channel-list\"},[_c('div',{directives:[{name:\"title\",rawName:\"v-title\",value:('栏目管理'),expression:\"'栏目管理'\"}]}),_vm._v(\" \"),_c('div',{staticClass:\"l-tree-containner\"},[_c('el-tree',{ref:\"tree\",attrs:{\"icon-class\":\"el-icon-caret-right\",\"default-expand-all\":true,\"data\":_vm.channels,\"node-key\":\"id\",\"props\":_vm.customProps,\"expand-on-click-node\":false},on:{\"node-click\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[(!data.children.length)?_c('span',{staticClass:\"iconfont\"},[_vm._v(\"\")]):_vm._e(),_vm._v(_vm._s(node.label))])])}}])})],1),_vm._v(\" \"),(_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.parentChannel.hasOwnProperty('name') ? _vm.parentChannel.name : ''))]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(_vm.parentChannel)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.parentChannel)}}},[_vm._v(\"新增子栏目\")])],1)],1):_vm._e(),_vm._v(\" \"),(!_vm.channels.length)?_c('div',{staticClass:\"l-block-header\"},[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel({id: 0})}}},[_vm._v(\"新增栏目\")])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.channelChildren}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"栏目名\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(scope.row)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(scope.row)}}},[_vm._v(\"删除\")])]}}],null,false,3640908394)})],1)],1)])]):_vm._e(),_vm._v(\" \"),(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[(_vm.channelForm.id)?_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.channelForm.name))]):_c('span',[_vm._v(\"\\n                在 \"),_c('span',{staticStyle:{\"font-weight\":\"700\"}},[_vm._v(\"“\"+_vm._s(_vm.parentChannel.name)+\"”\")]),_vm._v(\"下新增栏目\")])]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.channelForm)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(_vm.channelForm)}}},[_vm._v(\"删除\")])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-form',{attrs:{\"model\":_vm.channelForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"模型\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.channelForm.model_id),callback:function ($$v) {_vm.$set(_vm.channelForm, \"model_id\", $$v)},expression:\"channelForm.model_id\"}},_vm._l((_vm.models),function(m){return _c('el-option',{key:m.name,attrs:{\"label\":m.name,\"value\":m.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"栏目名\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.channelForm.name),callback:function ($$v) {_vm.$set(_vm.channelForm, \"name\", $$v)},expression:\"channelForm.name\"}})],1),_vm._v(\" \"),_vm._l((_vm.customChannelFields),function(item,index){return [(item.type=='text')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{key:index,attrs:{\"name\":item.field},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='checkbox' && Array.isArray(_vm.channelForm[item.field]))?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}},_vm._l((item.extra),function(option){return _c('el-checkbox',{attrs:{\"label\":option.value}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),(item.type=='textarea')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='content')?_c('el-form-item',{staticClass:\"l-mb-22\",attrs:{\"label\":item.label}},[_c('div',[_c('vue-ueditor-wrap',{attrs:{\"config\":_vm.ueditorConfig},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1)]):_vm._e()]}),_vm._v(\" \"),(_vm.channelPositions.length)?_c('el-form-item',{attrs:{\"label\":\"栏目推荐位\"}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm['positions']),callback:function ($$v) {_vm.$set(_vm.channelForm, 'positions', $$v)},expression:\"channelForm['positions']\"}},_vm._l((_vm.channelPositions),function(option){return _c('el-checkbox',{attrs:{\"label\":option.id}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.doSubmit}},[_vm._v(\"确定\")])],1)],2)],1)]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-23988d67\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/cms/channel.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-23988d67\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./channel.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-23988d67\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./channel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-23988d67\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/cms/channel.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}