{"version":3,"sources":["webpack:///src/pages/cms/channel.vue","webpack:///./src/pages/cms/channel.vue?f645","webpack:///./src/pages/cms/channel.vue"],"names":["channel","data","checkList","channelPositions","customProps","children","label","title","showChannelChildren","channelForm","id","model_id","parent_id","name","positions","customChannelFields","ueditorConfig","ueditor","components","VueUeditorWrap","vue_ueditor_wrap_min_default","a","computed","extends_default","Object","vuex_esm","methods","addChannel","row","this","assign_default","channel_id","$store","dispatch","$types","CMS_PARENT_CHANNEL","editChannel","loadWholeChannel","CMS_CURRENT_CHANNEL","deleteChannel","_this","$confirm","confirmButtonText","cancelButtonText","type","then","$http","post","res","success","CMS_CHANNELS","$message","message","error","catch","handleNodeClick","node","length","CMS_CHANNEL_CHILDREN","doSubmit","doEdit","doAdd","doCancel","_this2","parentChannel","_this3","_ref","_this4","get","params","whole","forEach","field","$set","contents","item","value","metas","loadChannelPositions","_this5","is_channel","mounted","CMS_MODELS","watch","defineProperty_default","val","oldVal","_this6","models","model","fields","filter","hasOwnProperty","cms_channel","render","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","_v","ref","attrs","icon-class","default-expand-all","channels","node-key","props","expand-on-click-node","on","node-click","scopedSlots","_u","key","fn","_e","_s","staticStyle","padding","click","$event","width","channelChildren","prop","scope","label-width","placeholder","callback","$$v","_l","m","autocomplete","index","Array","isArray","option","config","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/12.f64c92547586670551ce.js","sourcesContent":["<style lang=\"less\" scoped>\n  .l-channel-list{\n    display: flex;\n    flex-flow: row nowrap;\n    min-height: calc(100vh - 50px - 20px);\n    margin:-20px 0 -20px -20px;\n    overflow-x: hidden;\n    .l-tree-containner{\n      min-width: 200px;\n      padding: 20px;\n      border-right: 1px solid #f4f4f4;\n      flex-shrink: 0;\n    }\n    .l-tree-content{\n      padding: 20px;\n      flex-grow: 1;\n      display: flex;\n      flex-flow: row nowrap;\n      box-sizing: border-box;\n      width: calc(100% - 240px);\n    }\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 16px;\n    padding-right: 8px;\n  }\n  .el-tree-node__content{\n    border-bottom: 1px solid #f4f4f4;\n    height: 32px;\n    line-height: 32px;\n  }\n  .l-channel-form{width: 100%;}\n  .l-channel-info ul li{\n    line-height: 40px;\n  }\n</style>\n<template>\n  <div class=\"l-channel-list\">\n      <div v-title=\"'栏目管理'\"></div>\n      <div class=\"l-tree-containner\">\n        <el-tree\n          @node-click=\"handleNodeClick\"\n          icon-class=\"el-icon-caret-right\"\n          :default-expand-all=\"true\"\n          ref=\"tree\"\n          :data=\"channels\"\n          node-key=\"id\"\n          :props=\"customProps\"\n          :expand-on-click-node=\"false\">\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span><span v-if=\"!data.children.length\" class=\"iconfont\">&#xe92a;</span>{{ node.label }}</span>\n          </span>\n        </el-tree>\n      </div>\n      <div class=\"l-tree-content\" v-if=\"showChannelChildren\">\n        <div class=\"l-block\">\n            <div class=\"l-block-header\"  v-if=\"parentChannel && parentChannel.id\">\n                <span><i class=\"iconfont\">&#xe64c;</i> {{parentChannel.hasOwnProperty('name') ? parentChannel.name : ''}}</span>\n                <el-button-group>\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"editChannel(parentChannel)\">编辑</el-button>\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(parentChannel)\">新增子栏目</el-button>\n                </el-button-group>\n            </div>\n            <div class=\"l-block-header\" v-else>\n              <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel({id: 0})\">新增栏目</el-button>\n            </div>\n            <div class=\"l-block-body\">\n              <el-table\n                v-loading=\"loading\"\n                :data=\"channelChildren\"\n                style=\"width: 100%\">\n                <el-table-column\n                  prop=\"id\"\n                  label=\"ID\"\n                  width=\"80\">\n                </el-table-column>\n                <el-table-column\n                  prop=\"name\"\n                  label=\"栏目名\">\n                </el-table-column>\n                <el-table-column\n                  label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button type=\"text\" @click=\"editChannel(scope.row)\">编辑</el-button>\n                    <el-button type=\"text\" @click=\"addChannel(scope.row)\">新增子栏目</el-button>\n                    <el-button type=\"text\" @click=\"deleteChannel(scope.row)\">删除</el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n        </div>\n      </div>\n      <div class=\"l-tree-content\" v-if=\"!showChannelChildren\">\n        <div class=\"l-block\" v-if=\"!showChannelChildren\">\n          <div class=\"l-block-header\" v-if=\"parentChannel && parentChannel.id\">\n              <span>\n                <span v-if=\"channelForm.id\"><i class=\"iconfont\">&#xe64c;</i> {{channelForm.name}}</span>\n                <span v-else>\n                  在「<i class=\"iconfont\">&#xe64c;</i> {{parentChannel.name}}」下新增栏目\n                </span>\n              </span>\n              <el-button-group>\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(channelForm)\">新增子栏目</el-button>\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"deleteChannel(channelForm)\">删除</el-button>\n              </el-button-group>\n          </div>\n          <div class=\"l-block-body\">\n            <el-form :model=\"channelForm\" label-width=\"100px\">\n              <el-form-item label=\"模型\">\n                <el-select v-model=\"channelForm.model_id\" placeholder=\"请选择\">\n                  <el-option\n                    v-for=\"m in models\"\n                    :key=\"m.name\"\n                    :label=\"m.name\"\n                    :value=\"m.id\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"栏目名\">\n                <el-input v-model=\"channelForm.name\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <template v-for=\"(item, index) in customChannelFields\">\n                <el-form-item v-if=\"item.type=='text'\" :label=\"item.label\">\n                  <el-input :key=\"index\" :name=\"item.field\" v-model=\"channelForm[item.field]\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='checkbox' && Array.isArray(channelForm[item.field])\" :label=\"item.label\">\n                  <el-checkbox-group v-model=\"channelForm[item.field]\">\n                      <el-checkbox :label=\"option.value\" v-for=\"option in item.extra\">{{option.name}}</el-checkbox>\n                  </el-checkbox-group>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='textarea'\" :label=\"item.label\">\n                  <el-input type=\"textarea\" v-model=\"channelForm[item.field]\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='content'\" class=\"l-mb-22\" :label=\"item.label\">\n                  <div>\n                    <vue-ueditor-wrap v-model=\"channelForm[item.field]\" :config=\"ueditorConfig\"></vue-ueditor-wrap>\n                  </div>\n                </el-form-item>\n              </template>\n                <el-form-item label=\"栏目推荐位\" v-if=\"channelPositions.length\">\n                    <!--<el-switch-->\n                            <!--v-model=\"showSwitch\"-->\n                            <!--active-color=\"#13ce66\"-->\n                            <!--inactive-color=\"#cccccc\">-->\n                    <!--</el-switch>-->\n                    <el-checkbox-group v-model=\"channelForm['positions']\">\n                        <el-checkbox :label=\"option.id\" v-for=\"option in channelPositions\">{{option.name}}</el-checkbox>\n                        <!--<el-checkbox label=\"复选框 A\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 B\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 C\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 D\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 E\"></el-checkbox>-->\n                    </el-checkbox-group>\n                </el-form-item>\n\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"doSubmit\">确定</el-button>\n                <!--<el-button @click=\"doCancel\">取消</el-button>-->\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\n  import ueditorConfig from \"../../store/ueditor\";\n  import VueUeditorWrap from 'vue-ueditor-wrap';\n  import {mapState, mapGetters} from 'vuex'\n\n  export default {\n    data() {\n      return {\n        checkList:[],\n        //showSwitch: true,\n        channelPositions: [],\n        customProps: {\n          children: 'children',\n          label: 'name'\n        },\n        title: '添加子栏目',\n        showChannelChildren: true,\n        channelForm:{\n          id: null,\n          model_id: '',\n          parent_id: null,\n          name: null,\n          positions:[]\n        },\n        customChannelFields: [],\n        ueditorConfig: ueditorConfig\n      }\n    },\n    components:{\n      VueUeditorWrap\n    },\n    computed:{\n        ...mapGetters([\n            'loading',\n            'channels',\n            'channelChildren',\n            'models',\n            'parentChannel',\n        ]),\n//      loading(){\n//        return this.$store.getters.loading;\n//      },\n//      treeData(){\n//        return this.$store.getters.channels;\n//      },\n//      children(){\n//        return this.$store.getters.channelChildren;\n//      },\n//      models(){\n//        return this.$store.getters.models;\n//      },\n//      parentChannel(){\n//        return this.$store.getters.parentChannel;\n//      },\n    },\n    methods: {\n      addChannel(row){\n        this.showChannelChildren = false;\n        this.channelForm = Object.assign({}, {\n          id: null,\n          parent_id: row.id,\n          model_id: '',\n          channel_id: null,\n          name: null,\n          positions: []\n        });\n        this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, row)\n        this.customChannelFields = []\n      },\n      editChannel(row){\n        this.loadWholeChannel(row)\n        this.showChannelChildren = false;\n\n        this.$store.dispatch(this.$types.CMS_CURRENT_CHANNEL, row)\n      },\n      deleteChannel(row){\n        this.$confirm('确定删除本栏目?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$http\n            .post(\"/admin/cms/channel/delete\", {id: row.id})\n            .then(res => {\n              if(res.success){\n                this.$store.dispatch(this.$types.CMS_CHANNELS, {id: row.parent_id});\n                this.showChannelChildren = true;\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                });\n              }else{\n                this.$message({\n                  type: 'error',\n                  message: res.error\n                });\n              }\n\n            }).catch(()=>{});\n        }).catch(()=>{});\n      },\n      handleNodeClick(node, ...$params){\n        if(node.children.length>0){\n          this.$store.dispatch(this.$types.CMS_CHANNEL_CHILDREN, node);\n          this.showChannelChildren = true;\n          this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, node)\n        }else{\n          this.showChannelChildren = false;\n          this.loadWholeChannel(node)\n        }\n      },\n      doSubmit(){\n        if(!this.channelForm.id){\n          this.doAdd()\n        }else{\n          this.doEdit()\n        }\n      },\n      doCancel(){\n        this.showChannelChildren = true;\n      },\n      doAdd(){\n        this.showChannelChildren = false\n        this.$http\n          .post(\"/admin/cms/channel/save\", this.channelForm)\n          .then(res => {\n            if(res.success){\n              this.showChannelChildren = true;\n              this.$store.dispatch(this.$types.CMS_CHANNELS, this.parentChannel);\n              this.$message({\n                type: 'success',\n                message: '添加成功!'\n              });\n            }else{\n              this.$message({\n                type: 'error',\n                message: '添加失败!'+res.error\n              });\n            }\n          });\n      },\n      doEdit(){\n        this.$http\n          .post(\"/admin/cms/channel/save\", this.channelForm)\n          .then(res => {\n            if(res.success){\n              this.$message({\n                type: 'success',\n                message: '修改成功!'\n              });\n              this.$store.dispatch(this.$types.CMS_CHANNELS, {id: this.channelForm.parent_id});\n            }else{\n              this.$message({\n                type: 'warning',\n                message: '修改失败!'+res.error\n              });\n            }\n          });\n      },\n      loadWholeChannel({id}){\n        this.$http\n          .get(\"/admin/cms/channel/whole\", {params: {id}})\n          .then(res => {\n            let whole = res.data;\n            this.channelForm = {}\n            let baseFields = ['id', 'model_id', 'parent_id', 'name', 'title', 'keywords', 'description'];\n\n            baseFields.forEach( field => {this.$set(this.channelForm, field, whole[field])} );\n\n            if(whole.contents && whole.contents.length){\n              whole.contents.forEach( item => {this.$set(this.channelForm, item.field, item.value)} );\n            }\n\n            if(whole.metas && whole.metas.length){\n              whole.metas.forEach( item => {this.$set(this.channelForm, item.field, item.value)});\n            }\n\n            if(whole.positions){\n                this.$set(this.channelForm, 'positions', whole.positions)\n            }\n          });\n      },\n      loadChannelPositions(){\n        // /cms/positions\n          this.$http\n              .get(\"/admin/cms/positions\", {params: {is_channel: 1}})\n              .then(res => {\n                  this.channelPositions = res.data\n              });\n      }\n\n    },\n    mounted() {\n      this.$store.dispatch('toggleState');\n      this.$store.dispatch(this.$types.CMS_CHANNELS);\n      this.$store.dispatch(this.$types.CMS_MODELS);\n      this.loadChannelPositions()\n    },\n    watch:{\n      ['channelForm.model_id'](val, oldVal){\n        if(val){\n          if(this.models.length > 0){\n            this.models.forEach( model => {\n              if(model.id == this.channelForm.model_id){\n                this.customChannelFields = model.fields.filter( field => {\n                  if(field.is_channel){\n                    // 不覆盖主表中存储的字段\n                    if(!this.channelForm.hasOwnProperty(field.field)){\n                        this.$set(this.channelForm, field.field, '')\n                        if(field.type == 'checkbox'){\n                            this.$set(this.channelForm, field.field, [])\n                        }\n                    }\n                  }\n                  return field.is_channel;\n                })\n              }\n            });\n          }\n        }else{\n          // 不设置任何自定义表单项\n          this.customChannelFields = []\n        }\n      }\n    }\n  }\n</script>\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/cms/channel.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"l-channel-list\"},[_c('div',{directives:[{name:\"title\",rawName:\"v-title\",value:('栏目管理'),expression:\"'栏目管理'\"}]}),_vm._v(\" \"),_c('div',{staticClass:\"l-tree-containner\"},[_c('el-tree',{ref:\"tree\",attrs:{\"icon-class\":\"el-icon-caret-right\",\"default-expand-all\":true,\"data\":_vm.channels,\"node-key\":\"id\",\"props\":_vm.customProps,\"expand-on-click-node\":false},on:{\"node-click\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[(!data.children.length)?_c('span',{staticClass:\"iconfont\"},[_vm._v(\"\")]):_vm._e(),_vm._v(_vm._s(node.label))])])}}])})],1),_vm._v(\" \"),(_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.parentChannel.hasOwnProperty('name') ? _vm.parentChannel.name : ''))]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(_vm.parentChannel)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.parentChannel)}}},[_vm._v(\"新增子栏目\")])],1)],1):_c('div',{staticClass:\"l-block-header\"},[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel({id: 0})}}},[_vm._v(\"新增栏目\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.channelChildren}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"栏目名\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(scope.row)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(scope.row)}}},[_vm._v(\"删除\")])]}}],null,false,3640908394)})],1)],1)])]):_vm._e(),_vm._v(\" \"),(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[(_vm.channelForm.id)?_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.channelForm.name))]):_c('span',[_vm._v(\"\\n                在「\"),_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.parentChannel.name)+\"」下新增栏目\\n              \")])]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.channelForm)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(_vm.channelForm)}}},[_vm._v(\"删除\")])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-form',{attrs:{\"model\":_vm.channelForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"模型\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.channelForm.model_id),callback:function ($$v) {_vm.$set(_vm.channelForm, \"model_id\", $$v)},expression:\"channelForm.model_id\"}},_vm._l((_vm.models),function(m){return _c('el-option',{key:m.name,attrs:{\"label\":m.name,\"value\":m.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"栏目名\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.channelForm.name),callback:function ($$v) {_vm.$set(_vm.channelForm, \"name\", $$v)},expression:\"channelForm.name\"}})],1),_vm._v(\" \"),_vm._l((_vm.customChannelFields),function(item,index){return [(item.type=='text')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{key:index,attrs:{\"name\":item.field},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='checkbox' && Array.isArray(_vm.channelForm[item.field]))?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}},_vm._l((item.extra),function(option){return _c('el-checkbox',{attrs:{\"label\":option.value}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),(item.type=='textarea')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='content')?_c('el-form-item',{staticClass:\"l-mb-22\",attrs:{\"label\":item.label}},[_c('div',[_c('vue-ueditor-wrap',{attrs:{\"config\":_vm.ueditorConfig},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1)]):_vm._e()]}),_vm._v(\" \"),(_vm.channelPositions.length)?_c('el-form-item',{attrs:{\"label\":\"栏目推荐位\"}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm['positions']),callback:function ($$v) {_vm.$set(_vm.channelForm, 'positions', $$v)},expression:\"channelForm['positions']\"}},_vm._l((_vm.channelPositions),function(option){return _c('el-checkbox',{attrs:{\"label\":option.id}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.doSubmit}},[_vm._v(\"确定\")])],1)],2)],1)]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3d67c19c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/cms/channel.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3d67c19c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./channel.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3d67c19c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./channel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3d67c19c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/cms/channel.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}