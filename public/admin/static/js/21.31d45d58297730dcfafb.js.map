{"version":3,"sources":["webpack:///src/pages/cms/channel.vue","webpack:///./src/pages/cms/channel.vue?731a","webpack:///./src/pages/cms/channel.vue"],"names":["channel","defineProperty_default","data","checkList","optionalTemplatePath","channelPositions","customProps","children","label","title","showChannelChildren","channelForm","id","model_id","parent_id","name","positions","customChannelFields","ueditorConfig","ueditor","watch","val","this","loadTemplatePath","components","VueUeditorWrap","vue_ueditor_wrap_min_default","a","computed","extends_default","Object","vuex_esm","methods","_this","asyncToGenerator_default","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","api","getOptionalTemplatePath","sent","console","log","stringify_default","stop","addChannel","row","assign_default","channel_id","$store","dispatch","$types","CMS_PARENT_CHANNEL","editChannel","loadWholeChannel","CMS_CURRENT_CHANNEL","deleteChannel","_this2","$confirm","confirmButtonText","cancelButtonText","type","then","_callee2","res","_context2","deleteCmsChannel","success","CMS_CHANNELS","$message","message","error","catch","handleNodeClick","node","length","CMS_CHANNEL_CHILDREN","doSubmit","doEdit","doAdd","doCancel","_this3","_callee3","_context3","saveCmsChannel","parentChannel","_this4","_callee4","_context4","_ref3","_this5","_callee5","whole","_context5","getCmsChannelWhole","forEach","field","$set","contents","item","value","metas","loadChannelPositions","_this6","_callee6","_context6","getCmsPositions","is_channel","mounted","_this7","_callee7","_context7","$route","meta","CMS_MODELS","_this8","_callee8","_context8","models","model","fields","filter","hasOwnProperty","cms_channel","render","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","_v","ref","attrs","icon-class","default-expand-all","channels","node-key","props","expand-on-click-node","on","node-click","scopedSlots","_u","key","fn","_e","_s","staticStyle","padding","click","$event","width","channelChildren","prop","scope","font-weight","label-width","placeholder","callback","$$v","_l","m","autocomplete","index","Array","isArray","option","config","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/21.31d45d58297730dcfafb.js","sourcesContent":["<style lang=\"less\" scoped>\r\n  .l-channel-list{\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    min-height: calc(100vh - 50px - 20px);\r\n    margin:-20px 0 -20px -20px;\r\n    overflow-x: hidden;\r\n    .l-tree-containner{\r\n      min-width: 200px;\r\n      padding: 20px;\r\n      border-right: 1px solid #f4f4f4;\r\n      flex-shrink: 0;\r\n    }\r\n    .l-tree-content{\r\n      padding: 20px;\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      box-sizing: border-box;\r\n      width: calc(100% - 240px);\r\n    }\r\n  }\r\n  .custom-tree-node {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 17px;\r\n    /*padding-right: 8px;*/\r\n  }\r\n  .el-tree-node__content{\r\n    border-bottom: 1px solid #f4f4f4;\r\n    height: 32px;\r\n    line-height: 32px;\r\n  }\r\n  .l-channel-form{width: 100%;}\r\n  .l-channel-info ul li{\r\n    line-height: 40px;\r\n  }\r\n</style>\r\n<template>\r\n  <div class=\"l-channel-list\">\r\n      <div v-title=\"'栏目管理'\"></div>\r\n      <div class=\"l-tree-containner\">\r\n        <el-tree\r\n          @node-click=\"handleNodeClick\"\r\n          icon-class=\"el-icon-caret-right\"\r\n          :default-expand-all=\"true\"\r\n          ref=\"tree\"\r\n          :data=\"channels\"\r\n          node-key=\"id\"\r\n          :props=\"customProps\"\r\n          :expand-on-click-node=\"false\">\r\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n            <span><span v-if=\"!data.children.length\" class=\"iconfont\">&#xe92a;</span>{{ node.label }}</span>\r\n          </span>\r\n        </el-tree>\r\n      </div>\r\n      <div class=\"l-tree-content\" v-if=\"showChannelChildren\">\r\n        <div class=\"l-block\">\r\n            <div class=\"l-block-header\" v-if=\"parentChannel && parentChannel.id\">\r\n                <span><i class=\"iconfont\">&#xe64c;</i> {{parentChannel.hasOwnProperty('name') ? parentChannel.name : ''}}</span>\r\n                <el-button-group>\r\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"editChannel(parentChannel)\">编辑</el-button>\r\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(parentChannel)\">新增子栏目</el-button>\r\n                </el-button-group>\r\n            </div>\r\n            <div class=\"l-block-header\" v-if=\"!channels.length\">\r\n              <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel({id: 0})\">新增栏目</el-button>\r\n            </div>\r\n            <div class=\"l-block-body\">\r\n              <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"channelChildren\"\r\n                style=\"width: 100%\">\r\n                <el-table-column\r\n                  prop=\"id\"\r\n                  label=\"ID\"\r\n                  width=\"80\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                  prop=\"name\"\r\n                  label=\"栏目名\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                  label=\"操作\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-button type=\"text\" @click=\"editChannel(scope.row)\">编辑</el-button>\r\n                    <el-button type=\"text\" @click=\"addChannel(scope.row)\">新增子栏目</el-button>\r\n                    <el-button type=\"text\" @click=\"deleteChannel(scope.row)\">删除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"l-tree-content\" v-if=\"!showChannelChildren\">\r\n        <div class=\"l-block\" v-if=\"!showChannelChildren\">\r\n          <div class=\"l-block-header\" v-if=\"parentChannel && parentChannel.id\">\r\n              <span>\r\n                <span v-if=\"channelForm.id\"><i class=\"iconfont\">&#xe64c;</i> {{channelForm.name}}</span>\r\n                <span v-else>\r\n                    <!--「<i class=\"iconfont\">&#xe64c;</i> 」-->\r\n                  在 <span style=\"font-weight: 700\">“{{parentChannel.name}}”</span>下新增栏目</span>\r\n                </span>\r\n              <el-button-group>\r\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(channelForm)\">新增子栏目</el-button>\r\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"deleteChannel(channelForm)\">删除</el-button>\r\n              </el-button-group>\r\n          </div>\r\n          <div class=\"l-block-body\">\r\n            <el-form :model=\"channelForm\" label-width=\"100px\">\r\n              <el-form-item label=\"模型\">\r\n                <el-select v-model=\"channelForm.model_id\" placeholder=\"请选择\">\r\n                  <el-option\r\n                    v-for=\"m in models\"\r\n                    :key=\"m.name\"\r\n                    :label=\"m.name\"\r\n                    :value=\"m.id\">\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"栏目名\">\r\n                <el-input v-model=\"channelForm.name\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n            <el-form-item label=\"栏目模板\">\r\n                <!--<el-input v-model=\"channelForm.template\" autocomplete=\"off\"></el-input>-->\r\n                <el-select v-model=\"channelForm.template\" placeholder=\"请选择\">\r\n                    <el-option\r\n                            v-for=\"(item, index) in optionalTemplatePath\"\r\n                            :key=\"index\"\r\n                            :label=\"item\"\r\n                            :value=\"item\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n                <el-form-item label=\"内容模板\">\r\n                    <el-select v-model=\"channelForm.content_template\" placeholder=\"请选择\">\r\n                        <el-option\r\n                                v-for=\"(item, index) in optionalTemplatePath\"\r\n                                :key=\"index\"\r\n                                :label=\"item\"\r\n                                :value=\"item\">\r\n                        </el-option>\r\n                    </el-select>\r\n                    <!--<el-input v-model=\"channelForm.content_template\" autocomplete=\"off\"></el-input>-->\r\n                </el-form-item>\r\n              <template v-for=\"(item, index) in customChannelFields\">\r\n                <el-form-item v-if=\"item.type=='text'\" :label=\"item.label\">\r\n                  <el-input :key=\"index\" :name=\"item.field\" v-model=\"channelForm[item.field]\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"item.type=='checkbox' && Array.isArray(channelForm[item.field])\" :label=\"item.label\">\r\n                  <el-checkbox-group v-model=\"channelForm[item.field]\">\r\n                      <el-checkbox :label=\"option.value\" v-for=\"option in item.extra\">{{option.name}}</el-checkbox>\r\n                  </el-checkbox-group>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"item.type=='textarea'\" :label=\"item.label\">\r\n                  <el-input type=\"textarea\" v-model=\"channelForm[item.field]\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item v-if=\"item.type=='content'\" class=\"l-mb-22\" :label=\"item.label\">\r\n                  <div>\r\n                    <vue-ueditor-wrap v-model=\"channelForm[item.field]\" :config=\"ueditorConfig\"></vue-ueditor-wrap>\r\n                  </div>\r\n                </el-form-item>\r\n              </template>\r\n                <el-form-item label=\"栏目推荐位\" v-if=\"channelPositions.length\">\r\n                    <el-checkbox-group v-model=\"channelForm['positions']\">\r\n                        <el-checkbox :label=\"option.id\" v-for=\"option in channelPositions\">{{option.name}}</el-checkbox>\r\n                    </el-checkbox-group>\r\n                </el-form-item>\r\n\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"doSubmit\">确定</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import ueditorConfig from \"../../store/ueditor\";\r\n  import VueUeditorWrap from 'vue-ueditor-wrap';\r\n  import {mapState, mapGetters} from 'vuex'\r\n  import api from '../../api/index'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        checkList:[],\r\n        optionalTemplatePath: [],\r\n        channelPositions: [],\r\n        customProps: {\r\n          children: 'children',\r\n          label: 'name'\r\n        },\r\n        title: '添加子栏目',\r\n        showChannelChildren: true,\r\n        channelForm:{\r\n          id: null,\r\n          model_id: '',\r\n          parent_id: null,\r\n          name: null,\r\n          positions:[]\r\n        },\r\n        customChannelFields: [],\r\n        ueditorConfig: ueditorConfig\r\n      }\r\n    },\r\n    watch:{\r\n        ['channelForm.model_id'](val){\r\n            this.loadTemplatePath(val)\r\n        }\r\n    },\r\n    components:{\r\n      VueUeditorWrap\r\n    },\r\n    computed:{\r\n        ...mapGetters([\r\n            'loading',\r\n            'channels',\r\n            'channelChildren',\r\n            'models',\r\n            'parentChannel',\r\n        ])\r\n    },\r\n    methods: {\r\n      async loadTemplatePath(model_id){\r\n            let {data} = await api.getOptionalTemplatePath({model_id});\r\n            console.log(JSON.stringify(data))\r\n            this.optionalTemplatePath = data;\r\n        },\r\n      addChannel(row){\r\n        this.showChannelChildren = false;\r\n        this.channelForm = Object.assign({}, {\r\n          id: null,\r\n          parent_id: row.id,\r\n          model_id: '',\r\n          channel_id: null,\r\n          name: null,\r\n          positions: []\r\n        });\r\n        this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, row)\r\n        this.customChannelFields = []\r\n      },\r\n      editChannel(row){\r\n        this.loadWholeChannel(row)\r\n        this.showChannelChildren = false;\r\n\r\n        this.$store.dispatch(this.$types.CMS_CURRENT_CHANNEL, row)\r\n      },\r\n      deleteChannel(row){\r\n        this.$confirm('确定删除“'+row.name+'”栏目?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(async () => {\r\n          let res = await api.deleteCmsChannel({id: row.id})\r\n          if(res.success){\r\n            this.$store.dispatch(this.$types.CMS_CHANNELS, {id: row.parent_id});\r\n            this.showChannelChildren = true;\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            });\r\n          }else{\r\n            this.$message({\r\n              type: 'error',\r\n              message: res.error\r\n            });\r\n          }\r\n        }).catch(()=>{});\r\n      },\r\n      handleNodeClick(node, ...$params){\r\n        if(node.children.length>0){\r\n          this.$store.dispatch(this.$types.CMS_CHANNEL_CHILDREN, node);\r\n          this.showChannelChildren = true;\r\n          this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, node)\r\n        }else{\r\n          this.showChannelChildren = false;\r\n          this.loadWholeChannel(node)\r\n        }\r\n      },\r\n      doSubmit(){\r\n        if(!this.channelForm.id){\r\n          this.doAdd()\r\n        }else{\r\n          this.doEdit()\r\n        }\r\n      },\r\n      doCancel(){\r\n        this.showChannelChildren = true;\r\n      },\r\n      async doAdd(){\r\n        this.showChannelChildren = false\r\n        let res = await api.saveCmsChannel(this.channelForm)\r\n        if(res.success){\r\n          this.showChannelChildren = true;\r\n          this.$store.dispatch(this.$types.CMS_CHANNELS, this.parentChannel);\r\n          this.$message({\r\n            type: 'success',\r\n            message: '添加成功!'\r\n          });\r\n        }else{\r\n          this.$message({\r\n            type: 'error',\r\n            message: '添加失败!'+res.error\r\n          });\r\n        }\r\n      },\r\n      async doEdit(){\r\n        let res = await api.saveCmsChannel(this.channelForm)\r\n        if(res.success){\r\n          this.$message({\r\n            type: 'success',\r\n            message: '修改成功!'\r\n          });\r\n          this.$store.dispatch(this.$types.CMS_CHANNELS, {id: this.channelForm.parent_id});\r\n        }else{\r\n          this.$message({\r\n            type: 'warning',\r\n            message: '修改失败!'+res.error\r\n          });\r\n        }\r\n      },\r\n      async loadWholeChannel({id}){\r\n        let res = await api.getCmsChannelWhole({id})\r\n        let whole = res.data;\r\n        this.channelForm = {}\r\n        let baseFields = ['id', 'model_id', 'parent_id', 'name', 'title', 'keywords', 'description', 'template', 'content_template'];\r\n\r\n        baseFields.forEach( field => {this.$set(this.channelForm, field, whole[field])} );\r\n\r\n        if(whole.contents && whole.contents.length){\r\n          whole.contents.forEach( item => {this.$set(this.channelForm, item.field, item.value)} );\r\n        }\r\n\r\n        if(whole.metas && whole.metas.length){\r\n          whole.metas.forEach( item => {this.$set(this.channelForm, item.field, item.value)});\r\n        }\r\n\r\n        if(whole.positions){\r\n            this.$set(this.channelForm, 'positions', whole.positions)\r\n        }\r\n      },\r\n      async loadChannelPositions(){\r\n          let res = await api.getCmsPositions({is_channel: 1})\r\n          this.channelPositions = res.data\r\n      }\r\n\r\n    },\r\n    async mounted() {\r\n      console.log(`current meta:`,this.$route.meta)\r\n      this.$store.dispatch('toggleState');\r\n      this.$store.dispatch(this.$types.CMS_CHANNELS);\r\n      this.$store.dispatch(this.$types.CMS_MODELS);\r\n      await this.loadChannelPositions()\r\n    },\r\n    watch:{\r\n      async ['channelForm.model_id'](val){\r\n        console.log(`###########`, val);\r\n        await this.loadTemplatePath(val)\r\n        if(val){\r\n          if(this.models.length > 0){\r\n            this.models.forEach( model => {\r\n              if(model.id == this.channelForm.model_id){\r\n                this.customChannelFields = model.fields.filter( field => {\r\n                  if(field.is_channel){\r\n                    // 不覆盖主表中存储的字段\r\n                    if(!this.channelForm.hasOwnProperty(field.field)){\r\n                        this.$set(this.channelForm, field.field, '')\r\n                        if(field.type == 'checkbox'){\r\n                            this.$set(this.channelForm, field.field, [])\r\n                        }\r\n                    }\r\n                  }\r\n                  return field.is_channel;\r\n                })\r\n              }\r\n            });\r\n          }\r\n        }else{\r\n          // 不设置任何自定义表单项\r\n          this.customChannelFields = []\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/cms/channel.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"l-channel-list\"},[_c('div',{directives:[{name:\"title\",rawName:\"v-title\",value:('栏目管理'),expression:\"'栏目管理'\"}]}),_vm._v(\" \"),_c('div',{staticClass:\"l-tree-containner\"},[_c('el-tree',{ref:\"tree\",attrs:{\"icon-class\":\"el-icon-caret-right\",\"default-expand-all\":true,\"data\":_vm.channels,\"node-key\":\"id\",\"props\":_vm.customProps,\"expand-on-click-node\":false},on:{\"node-click\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[(!data.children.length)?_c('span',{staticClass:\"iconfont\"},[_vm._v(\"\")]):_vm._e(),_vm._v(_vm._s(node.label))])])}}])})],1),_vm._v(\" \"),(_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.parentChannel.hasOwnProperty('name') ? _vm.parentChannel.name : ''))]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(_vm.parentChannel)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.parentChannel)}}},[_vm._v(\"新增子栏目\")])],1)],1):_vm._e(),_vm._v(\" \"),(!_vm.channels.length)?_c('div',{staticClass:\"l-block-header\"},[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel({id: 0})}}},[_vm._v(\"新增栏目\")])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.channelChildren}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"栏目名\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(scope.row)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(scope.row)}}},[_vm._v(\"删除\")])]}}],null,false,3640908394)})],1)],1)])]):_vm._e(),_vm._v(\" \"),(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[(_vm.channelForm.id)?_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.channelForm.name))]):_c('span',[_vm._v(\"\\n                在 \"),_c('span',{staticStyle:{\"font-weight\":\"700\"}},[_vm._v(\"“\"+_vm._s(_vm.parentChannel.name)+\"”\")]),_vm._v(\"下新增栏目\")])]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.channelForm)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(_vm.channelForm)}}},[_vm._v(\"删除\")])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-form',{attrs:{\"model\":_vm.channelForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"模型\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.channelForm.model_id),callback:function ($$v) {_vm.$set(_vm.channelForm, \"model_id\", $$v)},expression:\"channelForm.model_id\"}},_vm._l((_vm.models),function(m){return _c('el-option',{key:m.name,attrs:{\"label\":m.name,\"value\":m.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"栏目名\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.channelForm.name),callback:function ($$v) {_vm.$set(_vm.channelForm, \"name\", $$v)},expression:\"channelForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"栏目模板\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.channelForm.template),callback:function ($$v) {_vm.$set(_vm.channelForm, \"template\", $$v)},expression:\"channelForm.template\"}},_vm._l((_vm.optionalTemplatePath),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item,\"value\":item}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"内容模板\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.channelForm.content_template),callback:function ($$v) {_vm.$set(_vm.channelForm, \"content_template\", $$v)},expression:\"channelForm.content_template\"}},_vm._l((_vm.optionalTemplatePath),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item,\"value\":item}})}),1)],1),_vm._v(\" \"),_vm._l((_vm.customChannelFields),function(item,index){return [(item.type=='text')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{key:index,attrs:{\"name\":item.field},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='checkbox' && Array.isArray(_vm.channelForm[item.field]))?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}},_vm._l((item.extra),function(option){return _c('el-checkbox',{attrs:{\"label\":option.value}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),(item.type=='textarea')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='content')?_c('el-form-item',{staticClass:\"l-mb-22\",attrs:{\"label\":item.label}},[_c('div',[_c('vue-ueditor-wrap',{attrs:{\"config\":_vm.ueditorConfig},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1)]):_vm._e()]}),_vm._v(\" \"),(_vm.channelPositions.length)?_c('el-form-item',{attrs:{\"label\":\"栏目推荐位\"}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm['positions']),callback:function ($$v) {_vm.$set(_vm.channelForm, 'positions', $$v)},expression:\"channelForm['positions']\"}},_vm._l((_vm.channelPositions),function(option){return _c('el-checkbox',{attrs:{\"label\":option.id}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.doSubmit}},[_vm._v(\"确定\")])],1)],2)],1)]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-46f531d8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/cms/channel.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-46f531d8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./channel.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-46f531d8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./channel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-46f531d8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/cms/channel.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}