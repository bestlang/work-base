{"version":3,"sources":["webpack:///src/pages/cms/channel.vue","webpack:///./src/pages/cms/channel.vue?dc6d","webpack:///./src/pages/cms/channel.vue"],"names":["channel","data","checkList","channelPositions","customProps","children","label","title","showChannelChildren","channelForm","id","model_id","parent_id","name","positions","customChannelFields","components","VueUeditorWrap","a","computed","loading","this","$store","getters","treeData","channels","channelChildren","models","parentChannel","ueditorConfig","ueditor","methods","addChannel","row","assign_default","channel_id","dispatch","$types","CMS_PARENT_CHANNEL","editChannel","loadWholeChannel","CMS_CURRENT_CHANNEL","deleteChannel","_this","$confirm","confirmButtonText","cancelButtonText","type","then","$http","post","res","success","CMS_CHANNELS","$message","message","error","catch","handleNodeClick","node","length","CMS_CHANNEL_CHILDREN","doSubmit","doEdit","doAdd","doCancel","_this2","_this3","_ref","_this4","get","params","whole","forEach","field","$set","contents","item","value","metas","loadChannelPositions","_this5","is_channel","mounted","CMS_MODELS","watch","defineProperty_default","val","oldVal","_this6","model","fields","filter","hasOwnProperty","cms_channel","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","icon-class","default-expand-all","node-key","props","expand-on-click-node","on","node-click","scopedSlots","_u","key","fn","_e","_v","_s","staticStyle","padding","click","$event","directives","rawName","expression","width","prop","scope","label-width","placeholder","callback","$$v","_l","m","autocomplete","index","Array","isArray","option","config","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/4.25a797dcc5121b77f9a5.js","sourcesContent":["<style lang=\"less\" scoped>\n  .l-channel-list{\n    display: flex;\n    flex-flow: row nowrap;\n    min-height: calc(100vh - 50px - 20px);\n    margin:-20px 0 -20px -20px;\n    overflow-x: hidden;\n    .l-tree-containner{\n      min-width: 200px;\n      padding: 20px;\n      border-right: 1px solid #f4f4f4;\n      flex-shrink: 0;\n    }\n    .l-tree-content{\n      padding: 20px;\n      flex-grow: 1;\n      display: flex;\n      flex-flow: row nowrap;\n      box-sizing: border-box;\n      width: calc(100% - 240px);\n    }\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 16px;\n    padding-right: 8px;\n  }\n  .el-tree-node__content{\n    border-bottom: 1px solid #f4f4f4;\n    height: 32px;\n    line-height: 32px;\n  }\n  .l-channel-form{width: 100%;}\n  .l-channel-info ul li{\n    line-height: 40px;\n  }\n</style>\n<template>\n  <div class=\"l-channel-list\">\n      <div class=\"l-tree-containner\">\n        <el-tree\n          @node-click=\"handleNodeClick\"\n          icon-class=\"el-icon-caret-right\"\n          :default-expand-all=\"true\"\n          ref=\"tree\"\n          :data=\"treeData\"\n          node-key=\"id\"\n          :props=\"customProps\"\n          :expand-on-click-node=\"false\">\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span><span v-if=\"!data.children.length\" class=\"iconfont\">&#xe92a;</span>{{ node.label }}</span>\n          </span>\n        </el-tree>\n      </div>\n      <div class=\"l-tree-content\" v-if=\"showChannelChildren\">\n        <div class=\"l-block\">\n            <div class=\"l-block-header\"  v-if=\"parentChannel && parentChannel.id\">\n                <span><i class=\"iconfont\">&#xe64c;</i> {{parentChannel.hasOwnProperty('name') ? parentChannel.name : ''}}</span>\n                <el-button-group>\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"editChannel(parentChannel)\">编辑</el-button>\n                  <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(parentChannel)\">新增子栏目</el-button>\n                </el-button-group>\n            </div>\n            <div class=\"l-block-header\" v-else>\n              <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel({id: 0})\">新增栏目</el-button>\n            </div>\n            <div class=\"l-block-body\">\n              <el-table\n                v-loading=\"loading\"\n                :data=\"children\"\n                style=\"width: 100%\">\n                <el-table-column\n                  prop=\"id\"\n                  label=\"ID\"\n                  width=\"80\">\n                </el-table-column>\n                <el-table-column\n                  prop=\"name\"\n                  label=\"栏目名\">\n                </el-table-column>\n                <el-table-column\n                  label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button type=\"text\" @click=\"editChannel(scope.row)\">编辑</el-button>\n                    <el-button type=\"text\" @click=\"addChannel(scope.row)\">新增子栏目</el-button>\n                    <el-button type=\"text\" @click=\"deleteChannel(scope.row)\">删除</el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n        </div>\n      </div>\n      <div class=\"l-tree-content\" v-if=\"!showChannelChildren\">\n        <div class=\"l-block\" v-if=\"!showChannelChildren\">\n          <div class=\"l-block-header\" v-if=\"parentChannel && parentChannel.id\">\n              <span>\n                <span v-if=\"channelForm.id\"><i class=\"iconfont\">&#xe64c;</i> {{channelForm.name}}</span>\n                <span v-else>\n                  在「<i class=\"iconfont\">&#xe64c;</i> {{parentChannel.name}}」下新增栏目\n                </span>\n              </span>\n              <el-button-group>\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"addChannel(channelForm)\">新增子栏目</el-button>\n                <el-button style=\"padding: 3px 10px\" type=\"text\" @click=\"deleteChannel(channelForm)\">删除</el-button>\n              </el-button-group>\n          </div>\n          <div class=\"l-block-body\">\n            <el-form :model=\"channelForm\" label-width=\"100px\">\n              <el-form-item label=\"模型\">\n                <el-select v-model=\"channelForm.model_id\" placeholder=\"请选择\">\n                  <el-option\n                    v-for=\"m in models\"\n                    :key=\"m.name\"\n                    :label=\"m.name\"\n                    :value=\"m.id\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"栏目名\">\n                <el-input v-model=\"channelForm.name\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <template v-for=\"(item, index) in customChannelFields\">\n                <el-form-item v-if=\"item.type=='text'\" :label=\"item.label\">\n                  <el-input :key=\"index\" :name=\"item.field\" v-model=\"channelForm[item.field]\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='checkbox' && Array.isArray(channelForm[item.field])\" :label=\"item.label\">\n                  <el-checkbox-group v-model=\"channelForm[item.field]\">\n                      <el-checkbox :label=\"option.value\" v-for=\"option in item.extra\">{{option.name}}</el-checkbox>\n                  </el-checkbox-group>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='textarea'\" :label=\"item.label\">\n                  <el-input type=\"textarea\" v-model=\"channelForm[item.field]\"></el-input>\n                </el-form-item>\n                <el-form-item v-if=\"item.type=='content'\" class=\"l-mb-22\" :label=\"item.label\">\n                  <div>\n                    <vue-ueditor-wrap v-model=\"channelForm[item.field]\" :config=\"ueditorConfig\"></vue-ueditor-wrap>\n                  </div>\n                </el-form-item>\n              </template>\n                <el-form-item label=\"栏目推荐位\" v-if=\"channelPositions.length\">\n                    <!--<el-switch-->\n                            <!--v-model=\"showSwitch\"-->\n                            <!--active-color=\"#13ce66\"-->\n                            <!--inactive-color=\"#cccccc\">-->\n                    <!--</el-switch>-->\n                    <el-checkbox-group v-model=\"channelForm['positions']\">\n                        <el-checkbox :label=\"option.id\" v-for=\"option in channelPositions\">{{option.name}}</el-checkbox>\n                        <!--<el-checkbox label=\"复选框 A\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 B\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 C\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 D\"></el-checkbox>-->\n                        <!--<el-checkbox label=\"复选框 E\"></el-checkbox>-->\n                    </el-checkbox-group>\n                </el-form-item>\n\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"doSubmit\">确定</el-button>\n                <!--<el-button @click=\"doCancel\">取消</el-button>-->\n              </el-form-item>\n            </el-form>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\n  import ueditorConfig from \"../../store/ueditor\";\n  import VueUeditorWrap from 'vue-ueditor-wrap';\n\n\n  export default {\n    data() {\n      return {\n        checkList:[],\n        //showSwitch: true,\n        channelPositions: [],\n        customProps: {\n          children: 'children',\n          label: 'name'\n        },\n        title: '添加子栏目',\n        showChannelChildren: true,\n        channelForm:{\n          id: null,\n          model_id: '',\n          parent_id: null,\n          name: null,\n          positions:[]\n        },\n        customChannelFields: []\n      }\n    },\n    components:{\n      VueUeditorWrap\n    },\n    computed:{\n      loading(){\n        return this.$store.getters.loading;\n      },\n      treeData(){\n        return this.$store.getters.channels;\n      },\n      children(){\n        return this.$store.getters.channelChildren;\n      },\n      models(){\n        return this.$store.getters.models;\n      },\n      parentChannel(){\n        return this.$store.getters.parentChannel;\n      },\n      ueditorConfig(){\n        return ueditorConfig\n      }\n    },\n    methods: {\n      addChannel(row){\n        this.showChannelChildren = false;\n        this.channelForm = Object.assign({}, {\n          id: null,\n          parent_id: row.id,\n          model_id: '',\n          channel_id: null,\n          name: null,\n          positions: []\n        });\n        this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, row)\n        this.customChannelFields = []\n      },\n      editChannel(row){\n        this.loadWholeChannel(row)\n        this.showChannelChildren = false;\n\n        this.$store.dispatch(this.$types.CMS_CURRENT_CHANNEL, row)\n      },\n      deleteChannel(row){\n        this.$confirm('确定删除本栏目?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$http\n            .post(\"/admin/cms/channel/delete\", {id: row.id})\n            .then(res => {\n              if(res.success){\n                this.$store.dispatch(this.$types.CMS_CHANNELS, {id: row.parent_id});\n                this.showChannelChildren = true;\n                this.$message({\n                  type: 'success',\n                  message: '删除成功!'\n                });\n              }else{\n                this.$message({\n                  type: 'error',\n                  message: res.error\n                });\n              }\n\n            }).catch(()=>{});\n        }).catch(()=>{});\n      },\n      handleNodeClick(node, ...$params){\n        if(node.children.length>0){\n          this.$store.dispatch(this.$types.CMS_CHANNEL_CHILDREN, node);\n          this.showChannelChildren = true;\n          this.$store.dispatch(this.$types.CMS_PARENT_CHANNEL, node)\n        }else{\n          this.showChannelChildren = false;\n          this.loadWholeChannel(node)\n        }\n      },\n      doSubmit(){\n        if(!this.channelForm.id){\n          this.doAdd()\n        }else{\n          this.doEdit()\n        }\n      },\n      doCancel(){\n        this.showChannelChildren = true;\n      },\n      doAdd(){\n        this.showChannelChildren = false\n        this.$http\n          .post(\"/admin/cms/channel/save\", this.channelForm)\n          .then(res => {\n            if(res.success){\n              this.showChannelChildren = true;\n              this.$store.dispatch(this.$types.CMS_CHANNELS, this.parentChannel);\n              this.$message({\n                type: 'success',\n                message: '添加成功!'\n              });\n            }else{\n              this.$message({\n                type: 'error',\n                message: '添加失败!'+res.error\n              });\n            }\n          });\n      },\n      doEdit(){\n        this.$http\n          .post(\"/admin/cms/channel/save\", this.channelForm)\n          .then(res => {\n            if(res.success){\n              this.$message({\n                type: 'success',\n                message: '修改成功!'\n              });\n              this.$store.dispatch(this.$types.CMS_CHANNELS, {id: this.channelForm.parent_id});\n            }else{\n              this.$message({\n                type: 'warning',\n                message: '修改失败!'+res.error\n              });\n            }\n          });\n      },\n      loadWholeChannel({id}){\n        this.$http\n          .get(\"/admin/cms/channel/whole\", {params: {id}})\n          .then(res => {\n            let whole = res.data;\n            this.channelForm = {}\n            let baseFields = ['id', 'model_id', 'parent_id', 'name', 'title', 'keywords', 'description'];\n\n            baseFields.forEach( field => {this.$set(this.channelForm, field, whole[field])} );\n\n            if(whole.contents && whole.contents.length){\n              whole.contents.forEach( item => {this.$set(this.channelForm, item.field, item.value)} );\n            }\n\n            if(whole.metas && whole.metas.length){\n              whole.metas.forEach( item => {this.$set(this.channelForm, item.field, item.value)});\n            }\n\n            if(whole.positions){\n                this.$set(this.channelForm, 'positions', whole.positions)\n            }\n          });\n      },\n      loadChannelPositions(){\n        // /cms/positions\n          this.$http\n              .get(\"/admin/cms/positions\", {params: {is_channel: 1}})\n              .then(res => {\n                  this.channelPositions = res.data\n              });\n      }\n\n    },\n    mounted() {\n      this.$store.dispatch('toggleState');\n      this.$store.dispatch(this.$types.CMS_CHANNELS);\n      this.$store.dispatch(this.$types.CMS_MODELS);\n      this.loadChannelPositions()\n    },\n    watch:{\n      ['channelForm.model_id'](val, oldVal){\n        if(val){\n          if(this.models.length > 0){\n            this.models.forEach( model => {\n              if(model.id == this.channelForm.model_id){\n                this.customChannelFields = model.fields.filter( field => {\n                  if(field.is_channel){\n                    // 不覆盖主表中存储的字段\n                    if(!this.channelForm.hasOwnProperty(field.field)){\n                        this.$set(this.channelForm, field.field, '')\n                        if(field.type == 'checkbox'){\n                            this.$set(this.channelForm, field.field, [])\n                        }\n                    }\n                  }\n                  return field.is_channel;\n                })\n              }\n            });\n          }\n        }else{\n          // 不设置任何自定义表单项\n          this.customChannelFields = []\n        }\n      }\n    }\n  }\n</script>\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/cms/channel.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"l-channel-list\"},[_c('div',{staticClass:\"l-tree-containner\"},[_c('el-tree',{ref:\"tree\",attrs:{\"icon-class\":\"el-icon-caret-right\",\"default-expand-all\":true,\"data\":_vm.treeData,\"node-key\":\"id\",\"props\":_vm.customProps,\"expand-on-click-node\":false},on:{\"node-click\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[(!data.children.length)?_c('span',{staticClass:\"iconfont\"},[_vm._v(\"\")]):_vm._e(),_vm._v(_vm._s(node.label))])])}}])})],1),_vm._v(\" \"),(_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.parentChannel.hasOwnProperty('name') ? _vm.parentChannel.name : ''))]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(_vm.parentChannel)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.parentChannel)}}},[_vm._v(\"新增子栏目\")])],1)],1):_c('div',{staticClass:\"l-block-header\"},[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel({id: 0})}}},[_vm._v(\"新增栏目\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.children}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"栏目名\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.editChannel(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(scope.row)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(scope.row)}}},[_vm._v(\"删除\")])]}}],null,false,3640908394)})],1)],1)])]):_vm._e(),_vm._v(\" \"),(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-tree-content\"},[(!_vm.showChannelChildren)?_c('div',{staticClass:\"l-block\"},[(_vm.parentChannel && _vm.parentChannel.id)?_c('div',{staticClass:\"l-block-header\"},[_c('span',[(_vm.channelForm.id)?_c('span',[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.channelForm.name))]):_c('span',[_vm._v(\"\\n                在「\"),_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"+_vm._s(_vm.parentChannel.name)+\"」下新增栏目\\n              \")])]),_vm._v(\" \"),_c('el-button-group',[_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.addChannel(_vm.channelForm)}}},[_vm._v(\"新增子栏目\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 10px\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.deleteChannel(_vm.channelForm)}}},[_vm._v(\"删除\")])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"l-block-body\"},[_c('el-form',{attrs:{\"model\":_vm.channelForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"模型\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.channelForm.model_id),callback:function ($$v) {_vm.$set(_vm.channelForm, \"model_id\", $$v)},expression:\"channelForm.model_id\"}},_vm._l((_vm.models),function(m){return _c('el-option',{key:m.name,attrs:{\"label\":m.name,\"value\":m.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"栏目名\"}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.channelForm.name),callback:function ($$v) {_vm.$set(_vm.channelForm, \"name\", $$v)},expression:\"channelForm.name\"}})],1),_vm._v(\" \"),_vm._l((_vm.customChannelFields),function(item,index){return [(item.type=='text')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{key:index,attrs:{\"name\":item.field},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='checkbox' && Array.isArray(_vm.channelForm[item.field]))?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}},_vm._l((item.extra),function(option){return _c('el-checkbox',{attrs:{\"label\":option.value}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),(item.type=='textarea')?_c('el-form-item',{attrs:{\"label\":item.label}},[_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1):_vm._e(),_vm._v(\" \"),(item.type=='content')?_c('el-form-item',{staticClass:\"l-mb-22\",attrs:{\"label\":item.label}},[_c('div',[_c('vue-ueditor-wrap',{attrs:{\"config\":_vm.ueditorConfig},model:{value:(_vm.channelForm[item.field]),callback:function ($$v) {_vm.$set(_vm.channelForm, item.field, $$v)},expression:\"channelForm[item.field]\"}})],1)]):_vm._e()]}),_vm._v(\" \"),(_vm.channelPositions.length)?_c('el-form-item',{attrs:{\"label\":\"栏目推荐位\"}},[_c('el-checkbox-group',{model:{value:(_vm.channelForm['positions']),callback:function ($$v) {_vm.$set(_vm.channelForm, 'positions', $$v)},expression:\"channelForm['positions']\"}},_vm._l((_vm.channelPositions),function(option){return _c('el-checkbox',{attrs:{\"label\":option.id}},[_vm._v(_vm._s(option.name))])}),1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.doSubmit}},[_vm._v(\"确定\")])],1)],2)],1)]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a49a863e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/cms/channel.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a49a863e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./channel.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./channel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a49a863e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./channel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a49a863e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/cms/channel.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}